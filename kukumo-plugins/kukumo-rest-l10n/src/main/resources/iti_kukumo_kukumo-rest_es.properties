rest.define.contentType={word} como el tipo de contenido REST
rest.define.baseURL=la URL base {url}
rest.define.service=el servicio REST {text}
rest.define.subject=* identificad(o|a|os|as) por {text}
rest.define.query.parameters=los parámetros de búsqueda {map}
rest.define.timeout.millis=un timeout de {int} milisegundos
rest.define.timeout.secs=un timeout de {int} segundos
rest.define.failure.http.code.assertion=toda petición se considera fallida si su código HTTP {integer-assertion}
rest.define.auth.basic=(que) el servicio usa autenticación básica con las credenciales {username:text}:{password:text}
rest.define.auth.bearer=(que) el servicio usa el token de autenticación {text}
rest.define.auth.bearer.file=(que) el servicio usa el token de autenticación del fichero {file}
rest.define.auth.provider=(que) el servicio usa el proveedor de autenticación con los siguientes datos:

rest.execute.GET.query=se realiza la búsqueda *
rest.execute.GET.subject=se consulta(n) *
rest.execute.DELETE.subject=se elimina(n) *
rest.execute.PUT.subject.from.document=se reemplaza(n) * con los siguientes datos:
rest.execute.PUT.subject.from.file=se reemplaza(n) * con los datos del fichero {file}
rest.execute.PATCH.subject.from.document=se modifica(n) * con los siguientes datos:
rest.execute.PATCH.subject.from.file=se modifica(n) * con los datos del fichero {file}
rest.execute.POST.subject.from.document=se crea * con los siguientes datos:
rest.execute.POST.subject.from.file=se crea * con los datos del fichero {file}
rest.execute.POST.data.from.document=se envía al servicio los siguientes datos:
rest.execute.POST.data.from.file=se envía al servicio los datos del fichero {file}
rest.execute.POST.empty=se envía * sin datos

rest.assert.response.HTTP.code=el código de respuesta HTTP {integer-assertion}
rest.assert.response.body.strict.from.document=la respuesta es exactamente:
rest.assert.response.body.strict.from.file=la respuesta es exactamente el contenido del fichero {file}
rest.assert.response.body.strict.from.document.anyorder=la respuesta es exactamente (en cualquier orden):
rest.assert.response.body.strict.from.file.anyorder=la respuesta es exactamente el contenido del fichero {file} (en cualquier orden)
rest.assert.response.body.loose.from.document=la respuesta es parcialmente:
rest.assert.response.body.loose.from.file=la respuesta es parcialmente el contenido del fichero {file}
rest.assert.response.body.contentType=el tipo de contenido de la respuesta es {word}
rest.assert.response.body.fragment.text=el text del fragmento de la respuesta {fragment:text} {matcher:text-assertion}
rest.assert.response.body.fragment.integer=el entero del fragmento de la respuesta {fragment:text} {matcher:integer-assertion}
rest.assert.response.body.fragment.decimal=el decimal del fragmento de la respuesta {fragment:text} {matcher:decimal-assertion}