db.define.connection.parameters=la conexión a BBDD {url:text} usando el usuario {username:text} y la contraseña {password:text}
db.define.database.schema=el esquema de BBDD {word}


db.action.script.document=(que) se ejecuta el siguiente script SQL:
db.action.script.file=(que) se ejecuta el script SQL del fichero {file}

db.action.clear.table.all=(que) la tabla de BBDD {word} se ha limpiado
db.action.clear.table.row.one.column=(que) se ha(n) limpiado de la tabla de BBDD {table:word} * para el|la|los|las que la columna {column:word} = {value:text}
db.action.clear.table.row.two.columns=(que) se ha(n) limpiado de la tabla de BBDD {table:word} * para el|la|los|las que la columna {column1:word} = {value1:text} y la columna {column2:word} = {value2:text}


db.action.insert.from.data=(que) el|la|lo|los|las siguiente(s) * se inserta(n) en la tabla de BBDD {word}:
db.action.insert.from.xls=(que) el contenido del fichero XLS {file} se inserta en la BBDD 
db.action.insert.from.csv=(que) el contenido del fichero CSV {csv:file} se inserta en la tabla de BBDD {table:word}

db.action.delete.from.data=(que) el|la|lo|los|las siguiente(s) * se elimina(n) de la tabla de BBDD {word}:
db.action.delete.from.xls=(que) el contenido del fichero XLS {file} se elimina de la BBDD 
db.action.delete.from.csv=(que) el contenido del fichero CSV {csv:file} se elimina de la tabla de BBDD {table:word}

db.assert.table.exists.row.single.id=existe(n) * identificado(s)|identificada(s) por {id:text} en la tabla de BBDD {table:word}
db.assert.table.exists.row.one.column=existe(n) * en la tabla de BBDD {table:word} para el|la|los|las que la columna {column:word} = {value:text}
db.assert.table.exists.row.two.columns=existe(n) * en la tabla de BBDD {table:word} para el|la|los|las que la columna {column1:word} = {value1:text} y la columna {column2:word} = {value2:text} 
db.assert.table.exists.sql.where=existe(n) * en la tabla de BBDD {table:word} para el|la|los|las que se cumpla la cláusula SQL {sql:text}
db.assert.table.exists.data=el|la|los|las siguiente * existe(n) en la tabla de BBDD {word}:
db.assert.table.exists.xls=el contenido del fichero XLS {file} existe en la BBDD
db.assert.table.exists.csv=el contenido del fichero CSV {csv:file} existe en la tabla de BBDD {table:word}

db.assert.table.not.exists.row.single.id=no existe(n) * identificado(s)|identificada(s) por {id:text} en la tabla de BBDD {table:word}
db.assert.table.not.exists.row.one.column=no existe(n) * en la tabla de BBDD {table:word} para el|la|los|las que la columna {column:word} = {value:text}   
db.assert.table.not.exists.row.two.columns=no existe(n) * en la tabla de BBDD {table:word} para el|la|los|las que la columna {column1:word} = {value1:text} y la columna {column2:word} = {value2:text}
db.assert.table.not.exists.sql.where=no existe(n) * en la tabla de BBDD {table:word} para el|la|los|las que se cumpla la cláusula SQL {sql:text}
db.assert.table.not.exists.data=el|la|los|las siguiente * no existe(n) en la tabla de BBDD {word}:
db.assert.table.not.exists.xls=el contenido del fichero XLS {file} no existe en la BBDD
db.assert.table.not.exists.csv=el contenido del fichero CSV {csv:file} no existe en la tabla de BBDD {table:word}


db.assert.table.count.row.single.id=el número de * identificado(s) por {id:text} en la tabla de BBDD {table:word} {matcher:long-assertion}
db.assert.table.count.row.one.column=el número de * en la tabla de BBDD {table:word} para el|la|los|las que la columna {column:word} = {value:text} {matcher:long-assertion}
db.assert.table.count.row.two.columns=el número de * en la tabla de BBDD {table:word} para el|la|los|las que la columna {column1:word} = {value1:text} y la columna {column2:word} = {value2:text} {matcher:long-assertion}
db.assert.table.count.sql.where=el número de * en la tabla de BBDD {table:word} que cumplen la cláusula SQL {sql:text} {matcher:long-assertion}
db.assert.table.count.data=el número de * que cumplen lo(s) siguiente(s) * en la tabla de BBDD {table:word} {matcher:long-assertion}:


db.assert.table.empty=la tabla de BBDD {word} está vacía
db.assert.table.not.empty=la tabla de BBDD {word} no está vacía